apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.yaml:snakeyaml:1.16'
    compile 'com.google.guava:guava:14.0.1'
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    testCompile 'junit:junit:4.11'
}

/*
 * It's convenient when working in Eclipse to have a test suite containing
 * all available tests. However, Gradle normally runs every test it can find
 * automatically, which would cause all tests to be run twice. This bit of
 * configuration prevents that from happening; Gradle just runs the test suite
 * instead.
 */
test {
    include 'net/alloyggp/swiss/AllTests.class'
}

checkstyle {
    toolVersion = '6.7'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

// Define how we publish artifacts to Maven.
// Derived from instructions on the Central Repository site:
// http://central.sonatype.org/pages/gradle.html
group = "net.alloyggp"
version = "0.0.1"
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}
signing {
    sign configurations.archives
}
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'ggp-tournament'
        packaging 'jar'
        artifactId = "ggp-tournament"
        description 'A library for GGP tournament specification and scheduling.'
        url 'https://github.com/AlexLandau/ggp-tournament'

        scm {
          connection 'scm:git:git@github.com:AlexLandau/ggp-tournament.git'
          developerConnection 'scm:git:git@github.com:AlexLandau/ggp-tournament.git'
          url 'git@github.com:AlexLandau/ggp-tournament.git'
        }

        licenses {
          license {
            name 'The MIT License'
            url 'http://opensource.org/licenses/MIT'
          }
        }

        developers {
          developer {
            id 'AlexLandau'
            name 'Alex Landau'
            email 'alex@alloyggp.net'
          }
        }
      }
    }
  }
}